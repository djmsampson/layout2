<?xml version="1.0"?>
<!DOCTYPE xsl:stylesheet [
<!ENTITY nl "&#10;">
<!ENTITY nbsp "&#160;">
<!ENTITY sq "&#x25A1;">
]>

<doc name="Function reference" 
     type="Functions"
     briefdescription="A list of the available functions">
    
     <inlinesection name="Panels">
         <a href="uix.Panel.html"><img src="Images/bigicon_Panel.png" border="1"/></a>
         <a href="uix.CardPanel.html"><img src="Images/bigicon_CardPanel.png" border="1"/></a>
         <a href="uix.BoxPanel.html"><img src="Images/bigicon_BoxPanel.png" border="1"/></a>
         <a href="uix.TabPanel.html"><img src="Images/bigicon_TabPanel.png" border="1"/></a>
         <a href="uix.ScrollingPanel.html"><img src="Images/bigicon_ScrollingPanel.png" border="1"/></a>

     <subsection 
         name="uix.Panel" 
         description="Arrange a single element inside a standard panel"
         staticref="uix.Panel">
             <keywords>Panel</keywords>
             <img src="Images/bigicon_Panel.png" align="left"/>
             <br clear="all"/>
             <p>Arrange a single element inside a standard panel</p>
                          <dl>
                 <dt><function>
                         <name>uix.Panel</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a standard <matlabfcn>uipanel</matlabfcn> object but with automatic management
                 of the contained widget or layout. The properties available are largely
                 the same as the builtin <matlabfcn>uipanel</matlabfcn> object. Where more than one child is
                 added, the currently visible child is determined using the Selection property.</dd>
                 
                 <dt><function>
                         <name>uix.Panel</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.Panel properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>BorderType</name>
                         <value>none | etchedin | etchedout | beveledin | beveledout | line</value>
                         <description>Type of border around the uipanel area.</description>
                     </property>
                     <property>
                         <name>BorderWidth</name>
                         <value>positive integer</value>
                         <description>Width of the panel border.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>FontAngle</name>
                         <value>normal | italic | oblique</value>
                         <description>Title font angle.</description>
                     </property>
                     <property>
                         <name>FontName</name>
                         <value>string</value>
                         <description>Title font name (e.g. Arial, Helvetica etc).</description>
                     </property>
                     <property>
                         <name>FontSize</name>
                         <value>positive integer</value>
                         <description>Title font size.</description>
                     </property>
                     <property>
                         <name>FontUnits</name>
                         <value>inches | centimeters | normalized | points | pixels</value>
                         <description>Title font units for measuring size.</description>
                     </property>
                     <property>
                         <name>FontWeight</name>
                         <value>light | normal | demi | bold</value>
                         <description>Title font weight.</description>
                     </property>
                     <property>
                         <name>ForegroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Title font color and/or color of 2-D border line.</description>
                     </property>
                     <property>
                         <name>HighlightColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>3-D frame highlight color.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <!---
                     <property>
                         <name>Selection</name>
                         <value>positive integer or empty</value>
                         <description>Which child is visible.</description>
                     </property>
                     -->
                     <property>
                         <name>ShadowColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>3-D frame shadow color.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Title</name>
                         <value>string</value>
                         <description>Title string.</description>
                     </property>
                     <property>
                         <name>TitlePosition</name>
                         <value>lefttop | centertop | righttop | leftbottom | centerbottom | rightbottom</value>
                         <description>Location of title string in relation to the panel.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->p = <fcnref>uix.Panel</fcnref>( <string>'Parent'</string>, f, <string>'Title'</string>, <string>'A Panel'</string>, <string>'Padding'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'r'</string> )</code>
                     <result>
                         <center><img src="Images/Panel.png"/></center>
                     </result>
                 </example>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->p = <fcnref>uix.Panel</fcnref>( <string>'Parent'</string>, f, <string>'Title'</string>, <string>'A Panel'</string>, <string>'TitlePosition'</string>, 'CenterTop');
<!--&gt;&gt; -->b = <fcnref>uix.HBox</fcnref>( <string>'Parent'</string>, p, <string>'Spacing'</string>, 5, <string>'Padding'</string>, 5  );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( 'Style', 'listbox', <string>'Parent'</string>, b, <string>'String'</string>, {<string>'Item 1'</string>,<string>'Item 2'</string>} );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'b'</string> );
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'Widths'</string>, [100 -1] );</code>         
                     <result>
                         <center><img src="Images/Panel2.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.CardPanel</name>
                     <desc>for creating an undecorated panel</desc>
                 </item>
                 <item>
                     <name>uix.BoxPanel</name>
                     <desc>for creating a more boxy panel</desc>
                 </item>
                 <item>
                     <name>uix.TabPanel</name>
                     <desc>for a panel with tabs for selecting the visible child</desc>
                 </item>
             </seealso>
     </subsection>


     <subsection 
         name="uix.CardPanel" 
         description="Show one element (card) from a list"
         staticref="uix.CardPanel">
             <keywords>CardPanel</keywords>
             <img src="Images/bigicon_CardPanel.png" align="left"/>
             <br clear="all"/>
             <p>Show one element (card) from a list</p>
                          <dl>
                 <dt><function>
                         <name>uix.CardPanel</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new card panel which allows
    selection between the different child objects contained, making the
    selected child fill the space available and all other children
    invisible. This is commonly used for creating wizards or quick
    switching between different views of a single data-set.</dd>
                 
                 <dt><function>
                         <name>uix.CardPanel</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.CardPanel properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Selection</name>
                         <value>positive integer or empty</value>
                         <description>Which child is visible.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->p = <fcnref>uix.CardPanel</fcnref>( <string>'Parent'</string>, f, <string>'Padding'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'r'</string> );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'b'</string> );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'g'</string> );
<!--&gt;&gt; -->p.Selection = 2;</code>
                     <result>
                         <center><img src="Images/CardPanel.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.Panel</name>
                     <desc>for creating a standard panel</desc>
                 </item>
                 <item>
                     <name>uix.BoxPanel</name>
                     <desc>for creating a more boxy panel</desc>
                 </item>
                 <item>
                     <name>uix.TabPanel</name>
                     <desc>for a panel with tabs for selecting the visible child</desc>
                 </item>
             </seealso>
     </subsection>

     <subsection 
         name="uix.BoxPanel" 
         description="Arrange a single element in a panel with boxed title"
         staticref="uix.BoxPanel">
             <keywords>BoxPanel</keywords>
             <img src="Images/bigicon_BoxPanel.png" align="left"/>
             <br clear="all"/>
             <p>Arrange a single element in a panel with boxed title</p>
                          <dl>
                 <dt><function>
                         <name>uix.BoxPanel</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a box-styled panel object with
    automatic management of the contained widget or layout. The
    properties available are largely the same as the builtin <matlabfcn>UIPANEL</matlabfcn>
    object. Where more than one child is added, the currently visible
    child is determined using the Selection property.</dd>
                 
                 <dt><function>
                         <name>uix.BoxPanel</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.BoxPanel properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>BorderType</name>
                         <value>none | etchedin | etchedout | beveledin | beveledout | line</value>
                         <description>Type of border around the title and content areas.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>CloseRequestFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the panel close icon is clicked. Note that if empty, no close button is shown.</description>
                     </property>
                     <property>
                         <name>CloseTooltip</name>
                         <value>string</value>
                         <description>Custom tooltip string for close button. Note that if CloseRequestFcn is empty, no close button is shown.</description>
                     </property>
                     <!---
                     <property>
                        <name>CloseTooltipString</name>
                        <value>string</value>
                        <description>Custom tooltip string for close button. Note that if CloseRequestFcn is empty, no close button is shown.</description>
                    </property>
                    -->
                    <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <property>
                         <name>Docked</name>
                         <value>logical</value>
                         <description>Is this panel in a docked state. See <ref link="BoxPanelFancyStuff">advanced maneuvers with panels</ref> for details.</description>
                     </property>
                     <property>
                         <name>DockFcn</name>
                         <value>function handle</value>
                         <description>Function to call when panel is docked or undocked. Note that if empty, no dock button is shown. See <ref link="BoxPanelFancyStuff">advanced maneuvers with panels</ref> for details.</description>
                     </property>
                     <property>
                        <name>DockTooltip</name>
                        <value>string</value>
                        <description>Custom tooltip string for dock button (when panel is undocked). Note that if DockFcn is empty, no dock button is shown.</description>
                    </property>
                    <!---
                    <property>
                        <name>DockTooltipString</name>
                        <value>string</value>
                        <description>Custom tooltip string for dock button (when panel is undocked). Note that if DockFcn is empty, no dock button is shown.</description>
                    </property>
                    -->
                    <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>FontAngle</name>
                         <value>normal | italic | oblique</value>
                         <description>Title font angle.</description>
                     </property>
                     <property>
                         <name>FontName</name>
                         <value>string</value>
                         <description>Title font name (e.g. Arial, Helvetica etc).</description>
                     </property>
                     <property>
                         <name>FontSize</name>
                         <value>positive integer</value>
                         <description>Title font size.</description>
                     </property>
                     <property>
                         <name>FontUnits</name>
                         <value>inches | centimeters | normalized | points | pixels</value>
                         <description>Title font units for measuring size.</description>
                     </property>
                     <property>
                         <name>FontWeight</name>
                         <value>light | normal | demi | bold</value>
                         <description>Title font weight.</description>
                     </property>
                     <property>
                         <name>ForegroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Title font color and/or color of 2-D border line.</description>
                     </property>
                     <property>
                         <name>HelpFcn</name>
                         <value>function handle</value>
                         <description>Function to call when the help icon is clicked. Note that if empty, no help button is shown. See <ref link="BoxPanelFancyStuff">advanced maneuvers with panels</ref> for details.</description>
                     </property>
                     <property>
                         <name>HelpTooltip</name>
                         <value>string</value>
                         <description>Custom tooltip string for help button. Note that if HelpFcn is empty, no help button is shown.</description>
                     </property>
                     <!--
                     <property>
                        <name>HelpTooltipString</name>
                        <value>string</value>
                        <description>Custom tooltip string for help button. Note that if HelpFcn is empty, no help button is shown.</description>
                    </property>
                    -->
                    <property>
                         <name>HighlightColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>3-D frame highlight color.</description>
                     </property>
                     <property>
                         <name>MaximizeTooltip</name>
                         <value>string</value>
                         <description>Custom tooltip string for minimize button (when panel is minimized). Note that if MinimizeFcn is empty, no minimize button is shown.</description>
                     </property>
                     <!--
                     <property>
                        <name>MaximizeTooltipString</name>
                        <value>string</value>
                        <description>Custom tooltip string for minimize button (when panel is minimized). Note that if MinimizeFcn is empty, no minimize button is shown.</description>
                     </property>
                     -->
                     <property>
                         <name>Minimized</name>
                         <value>logical</value>
                         <description>Is this panel in a minimized state. See <ref link="BoxPanelFancyStuff">advanced maneuvers with panels</ref> for details.</description>
                     </property>
                     <property>
                         <name>MinimizeFcn</name>
                         <value>function handle</value>
                         <description>Function to call when panel is minimized or maximized. Note that if empty, no minimize button is shown. See <ref link="BoxPanelFancyStuff">advanced maneuvers with panels</ref> for details.</description>
                     </property>
                     <property>
                        <name>MinimizeTooltip</name>
                        <value>string</value>
                        <description>Custom tooltip string for minimize button (when panel is maximized). Note that if MinimizeFcn is empty, no minimize button is shown.</description>
                     </property>
                     <!--
                     <property>
                         <name>MinimizeTooltipString</name>
                         <value>string</value>
                         <description>Custom tooltip string for minimize button (when panel is maximized). Note that if MinimizeFcn is empty, no minimize button is shown.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     -->
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <!--<property>
                         <name>Selection</name>
                         <value>positive integer or empty</value>
                         <description>Which child is visible.</description>
                     </property>
                     -->
                     <property>
                         <name>ShadowColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>3-D frame shadow color.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Title</name>
                         <value>string</value>
                         <description>Title string.</description>
                     </property>
                     <property>
                         <name>TitleColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>color for the title bar background.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>UndockTooltip</name>
                         <value>string</value>
                         <description>Custom tooltip string for dock button (when panel is docked). Note that if DockFcn is empty, no dock button is shown.</description>
                     </property>					 
                     <!--
                     <property>
                        <name>UndockTooltipString</name>
                        <value>string</value>
                        <description>Custom tooltip string for dock button (when panel is docked). Note that if DockFcn is empty, no dock button is shown.</description>
                    </property>
                    -->
                    <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility. See the <ref link="VisibleExample">visible example</ref> for more details.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->p = <fcnref>uix.BoxPanel</fcnref>( <string>'Parent'</string>, f, <string>'Title'</string>, 'A BoxPanel', <string>'Padding'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'r'</string> )</code>
                     <result>
                         <center><img src="Images/BoxPanel.png"/></center>
                     </result>
                 </example>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->p = <fcnref>uix.BoxPanel</fcnref>( <string>'Parent'</string>, f, <string>'Title'</string>, 'A BoxPanel', <string>'Padding'</string>, 5 );
<!--&gt;&gt; -->b = <fcnref>uix.HBox</fcnref>( <string>'Parent'</string>, p, <string>'Spacing'</string>, 5, <string>'Padding'</string>, 5  );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( 'Style', 'listbox', <string>'Parent'</string>, b, <string>'String'</string>, {'Item 1','Item 2'} );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'b'</string> );
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'Widths'</string>, [100 -1] );
<!--&gt;&gt; -->p.FontSize = 12;
<!--&gt;&gt; -->p.FontWeight = 'bold';
<!--&gt;&gt; -->p.HelpFcn = @(x,y) disp('Help me!');</code>         
                     <result>
                         <center><img src="Images/BoxPanel2.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.Panel</name>
                     <desc>for creating a more standard panel</desc>
                 </item>
                 <item>
                     <name>uix.CardPanel</name>
                     <desc>for creating an undecorated panel</desc>
                 </item>
                 <item>
                     <name>uix.TabPanel</name>
                     <desc>for a panel with tabs for selecting the visible child</desc>
                 </item>
             </seealso>
     </subsection>

     <subsection 
         name="uix.TabPanel" 
         description="Arrange elements in a panel with tabs for selecting which is visible"
         staticref="uix.TabPanel">
             <keywords>TabPanel</keywords>
             <img src="Images/bigicon_TabPanel.png" align="left"/>
             <br clear="all"/>
             <p>Arrange elements in a panel with tabs for selecting which is visible</p>
                          <dl>
                 <dt><function>
                         <name>uix.TabPanel</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a panel with tabs along one edge
    to allow selection between the different child objects contained.</dd>
                 
                 <dt><function>
                         <name>uix.TabPanel</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.TabPanel properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>FontAngle</name>
                         <value>normal | italic | oblique</value>
                         <description>Title font angle.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>FontName</name>
                         <value>string</value>
                         <description>Title font name (e.g. Arial, Helvetica etc).</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>FontSize</name>
                         <value>positive integer</value>
                         <description>Title font size.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>FontUnits</name>
                         <value>inches | centimeters | normalized | points | pixels</value>
                         <description>Title font units for measuring size.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>FontWeight</name>
                         <value>light | normal | demi | bold</value>
                         <description>Title font weight.</description>
                     </property>
                     <property>
                         <name>ForegroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Title font color and/or color of 2-D border line.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>HighlightColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>3-D frame highlight color.</description>
                     </property>
                     -->
                     <!--
                     <property>
                         <name>ShadowColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>3-D frame shadow color.</description>
                     </property>
                     -->
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Selection</name>
                         <value>positive integer or empty</value>
                         <description>Which child is visible.</description>
                     </property>
                     <property>
                         <name>SelectionChangedFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the selected tab is changed. The event-data supplied has fields <code>OldValue</code> and <code>NewValue</code> giving the previously selected and newly selected tab indices.</description>
                     </property>
                     <property>
                         <name>TabContextMenus</name>
                         <value>cell array of context menus</value>
                         <description>The context menu (or []) for each tab.</description>
                     </property>
                     <property>
                        <name>TabEnables</name>
                        <value>cell array of on | off</value>
                        <description>A list of the enabled state of each tab (default is all 'on').</description>
                    </property>
                    <property>
                        <name>TabLocation</name>
                        <value>top | bottom | left | right</value>
                        <description>The location of the tabs (default is 'top').</description>
                    </property>
                    <property>
                         <name>TabTitles</name>
                         <value>cell array of strings</value>
                         <description>A list of the names of the tabs with one entry per tab.</description>
                     </property>
                     <!--
                     <property>
                         <name>TabWidth</name>
                         <value>positive integer</value>
                         <description>Width of each tab in pixels (default 50).</description>
                     </property>
                     -->
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->p = <fcnref>uix.TabPanel</fcnref>( <string>'Parent'</string>, f, <string>'Padding'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'r'</string> );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'b'</string> );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, p, <string>'Background'</string>, <string>'g'</string> );
<!--&gt;&gt; -->p.TabTitles = {<string>'Red'</string>, <string>'Blue'</string>, <string>'Green'</string>};
<!--&gt;&gt; -->p.Selection = 2;</code>
                     <result>
                         <center><img src="Images/TabPanel.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.Panel</name>
                     <desc>for creating a more standard panel</desc>
                 </item>
                 <item>
                     <name>uix.CardPanel</name>
                     <desc>for creating an undecorated panel</desc>
                 </item>
                 <item>
                     <name>uix.BoxPanel</name>
                     <desc>for creating a panel with boxed title</desc>
                 </item>
             </seealso>
     </subsection>

     <subsection 
         name="uix.ScrollingPanel" 
         description="Arrange a single element inside a scrollable panel"
         staticref="uix.ScrollingPanel">
             <keywords>ScrollingPanel</keywords>
             <img src="Images/bigicon_ScrollingPanel.png" align="left"/>
             <br clear="all"/>
             <p>Arrange a single element inside a panel and provide scrollbars if the panel is smaller than the element</p>
                          <dl>
                 <dt><function>
                         <name>uix.ScrollingPanel</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new scrolling panel.</dd>
                 
                 <dt><function>
                         <name>uix.ScrollingPanel</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.ScrollingPanel properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                        <name>Height</name>
                        <value>double</value>
                        <description>Height of the children. Positive value indicates fixed size in pixels, negative value indicates fill the available space.</description>
                     </property>
                     <!--
                     <property>
                         <name>Heights</name>
                         <value>double vector</value>
                         <description>Height of each of the children. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing. The size of this vector must always match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                         <name>HorizontalOffset</name>
                         <value>positive double</value>
                         <description>Horizontal offset of the children in pixels. Value is limited to between 0 and the difference between Width and the width of the panel.</description>
                     </property>
                     <!--
                     <property>
                        <name>HorizontalOffsets</name>
                        <value>double vector</value>
                        <description>Horizontal offset of each of the children. Each value is limited to between 0 and the difference between the width of child and the width of the panel. The size of this vector must always match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                        <name>HorizontalStep</name>
                        <value>positive double</value>
                        <description>Horizontal slider step in pixels.</description>
                     </property>
                     <!--
                     <property>
                         <name>HorizontalSteps</name>
                         <value>positive double vector</value>
                         <description>Horizontal slider step for each of the children. The size of this vector must always match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                         <name>MinimumHeight</name>
                         <value>positive double</value>
                         <description>Minimum height of the children in pixels.</description>
                     </property>
                     <!--
                     <property>
                        <name>MinimumHeights</name>
                        <value>double vector</value>
                        <description>Minimum height in pixels of each of the children. The size of this vector must match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                         <name>MinimumWidth</name>
                         <value>positive double</value>
                         <description>Minimum width of the children in pixels.</description>
                     </property>
                     <!--
                     <property>
                        <name>MinimumWidths</name>
                        <value>double vector</value>
                        <description>Minimum width in pixels of each of the children. The size of this vector must match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                         <name>MouseWheelEnabled</name>
                         <value>on | off</value>
                         <description>Mouse wheel scrolling status (default 'on').</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the children.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <!--
                     <property>
                         <name>Selection</name>
                         <value>positive integer or empty</value>
                         <description>Which child is visible.</description>
                     </property>
                     -->
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>VerticalOffset</name>
                         <value>positive double</value>
                         <description>Vertical offset of the children in pixels. Value is limited to between 0 and the difference between Height and the height of the panel.</description>
                     </property>
                     <!--
                     <property>
                        <name>VerticalOffsets</name>
                        <value>double vector</value>
                        <description>Vertical offset of each of the children. Each value is limited to between 0 and the difference between the height of child and the height of the panel. The size of this vector must always match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                         <name>VerticalSteps</name>
                         <value>positive double</value>
                         <description>Vertical slider step in pixels.</description>
                     </property>
                     <!--
                     <property>
                        <name>VerticalSteps</name>
                        <value>positive double vector</value>
                        <description>Vertical slider step for each of the children. The size of this vector must always match the size of Contents.</description>
                     </property>
                     -->
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                     <property>
                        <name>Width</name>
                        <value>double</value>
                        <description>Width of the children. Positive value indicates fixed sizes in pixels, negative value indicates fill the available space.</description>
                     </property>
                     <!--
                     <property>
                         <name>Widths</name>
                         <value>double vector</value>
                         <description>Width of each of the children. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing. The size of this vector must always match the size of Contents.</description>
                     </property>
                     -->
                 </propertytable>                 
             
             <examples>
                 <example>
                 	   <code>f = <matlabfcn>figure</matlabfcn>( 'Name', 'uix.ScrollingPanel Help Example' );
f.Position(3:4) = 400;
p = <fcnref>uix.ScrollingPanel</fcnref>( 'Parent', f );
a = <matlabfcn>axes</matlabfcn>( 'Parent', p );
[x, y, z] = <matlabfcn>peaks</matlabfcn>();
surf( a, x, y, z )
a.ActivePositionProperty = 'position';
<matlabfcn>set</matlabfcn>( p, 'Widths', 600, 'Heights', 600, 'HorizontalOffsets', 100, 'VerticalOffsets', 100 )</code>
                     <result>
                         <center><img src="Images/ScrollingPanel.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.Panel</name>
                     <desc>for creating a standard panel</desc>
                 </item>
                 <item>
                     <name>uix.CardPanel</name>
                     <desc>for creating an undecorated panel</desc>
                 </item>
                 <item>
                     <name>uix.BoxPanel</name>
                     <desc>for creating a more boxy panel</desc>
                 </item>
             </seealso>
     </subsection>

         
     </inlinesection>
     
    <!-- ****************************************************************** -->
    
     <inlinesection name="Boxes">
         <a href="uix.HBox.html"><img src="Images/bigicon_HBox.png" border="1"/></a>
         <a href="uix.VBox.html"><img src="Images/bigicon_VBox.png" border="1"/></a>
         <a href="uix.HBoxFlex.html"><img src="Images/bigicon_HBoxFlex.png" border="1"/></a>
         <a href="uix.VBoxFlex.html"><img src="Images/bigicon_VBoxFlex.png" border="1"/></a>
         <a href="uix.HButtonBox.html"><img src="Images/bigicon_HButtonBox.png" border="1"/></a>
         <a href="uix.VButtonBox.html"><img src="Images/bigicon_VButtonBox.png" border="1"/></a>
         
         <subsection 
             name="uix.HBox" 
             description="Arrange elements horizontally in a single row"
             staticref="uix.HBox">
                 <keywords>Box</keywords>
                 <keywords>HBox</keywords>
                 <keywords>Horizontal layout</keywords>

             <img src="Images/bigicon_HBox.png" align="left"/>
             <br clear="all"/>
             <p>Arrange elements horizontally in a single row</p>
             <dl>
                 <dt><function>
                         <name>uix.HBox</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new horizontal box layout with all properties set to defaults.
             The output is a new layout object that can be used as the parent for other user-interface components.</dd>
                 
                 <dt><function>
                         <name>uix.HBox</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.HBox properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>MinimumWidths</name>
                         <value>double vector</value>
                         <description>Minimum width in pixels of each of the children. The size of this vector must match the size of Contents.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                     <property>
                         <name>Widths</name>
                         <value>double vector</value>
                         <description>Width of each of the children. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing. The size of this vector must always match the size of Contents.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->b = <fcnref>uix.HBox</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'b'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'g'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'Widths'</string>, [-1 100 -2], <string>'Spacing'</string>, 5 );</code>
                     <result>
                         <center><img src="Images/HBox.png"/></center>
                     </result>
                 </example>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->b1 = <fcnref>uix.VBox</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b1, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; -->b2 = <fcnref>uix.HBox</fcnref>( <string>'Parent'</string>, b1, <string>'Padding'</string>, 5, <string>'Spacing'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b2, <string>'String'</string>, <string>'Button1'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b2, <string>'String'</string>, <string>'Button2'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b1, <string>'Widths'</string>, [30 -1] );</code>         
                     <result>
                         <center><img src="Images/CombineBoxes.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.VBox</name>
                     <desc>for creating a vertical arrangement</desc>
                 </item>
                 <item>
                     <name>uix.HBoxFlex</name>
                     <desc>for creating a horizontal arrangement with draggable dividers</desc>
                 </item>
             </seealso>
         </subsection>
                  
         <subsection 
             name="uix.VBox" 
             description="Arrange elements vertically in a single column"
             staticref="uix.VBox">
                 <keywords>Box</keywords>
                 <keywords>VBox</keywords>
                 <keywords>Vertical layout</keywords>
             <img src="Images/bigicon_VBox.png" align="left"/>
             <br clear="all"/>
             <p>Arrange elements vertically in a single column</p>
             <dl>
                 <dt><function>
                         <name>uix.VBox</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new vertical box layout with all properties set to defaults.
             The output is a new layout object that can be used as the parent for other user-interface components.</dd>
                 
                 <dt><function>
                         <name>uix.VBox</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.VBox properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>Heights</name>
                         <value>double vector</value>
                         <description>Height of each of the children. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing. The size of this vector must always match the size of Contents.</description>
                     </property>
                     <property>
                         <name>MinimumHeights</name>
                         <value>double vector</value>
                         <description>Minimum height in pixels of each of the children. The size of this vector must match the size of Contents.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->b = <fcnref>uix.VBox</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'b'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'g'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'Heights'</string>, [-1 100 -2], <string>'Spacing'</string>, 5 );</code>
                     <result>
                         <center><img src="Images/VBox.png"/></center>
                     </result>
                 </example>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->b1 = <fcnref>uix.VBox</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b1, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; -->b2 = <fcnref>uix.HBox</fcnref>( <string>'Parent'</string>, b1, <string>'Padding'</string>, 5, <string>'Spacing'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b2, <string>'String'</string>, <string>'Button1'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b2, <string>'String'</string>, <string>'Button2'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b1, <string>'Heights'</string>, [30 -1] );</code>         
                     <result>
                         <center><img src="Images/CombineBoxes.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.HBox</name>
                     <desc>for creating a horizontal arrangement</desc>
                 </item>
                 <item>
                     <name>uix.VBoxFlex</name>
                     <desc>for creating a vertical arrangement with draggable dividers</desc>
                 </item>
             </seealso>
         </subsection>
         
         
         <subsection 
             name="uix.HBoxFlex" 
             description="Arrange elements horizontally with draggable dividers"
             staticref="uix.HBoxFlex">
                 <keywords>Box</keywords>
                 <keywords>HBoxFlex</keywords>
                 <keywords>Horizontal layout</keywords>
                 <keywords>Draggable dividers</keywords>
                 <keywords>Flexible layout</keywords>
             <img src="Images/bigicon_HBoxFlex.png" align="left"/>
             <br clear="all"/>
             <p>Arrange elements horizontally with draggable dividers</p>
             <dl>
                 <dt><function>
                         <name>uix.HBoxFlex</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new horizontal box layout with draggable dividers and with all properties set to defaults.
             The output is a new layout object that can be used as the parent for other user-interface components.</dd>
                 
                 <dt><function>
                         <name>uix.HBoxFlex</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.HBoxFlex properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>DividerMarkings</name>
                         <value>on | off</value>
                         <description>Show markings on the draggable dividers (default 'on').</description>
                     </property>
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>MinimumWidths</name>
                         <value>double vector</value>
                         <description>Minimum width in pixels of each of the children. The size of this vector must match the size of Contents.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout (default 5).</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                     <property>
                         <name>Widths</name>
                         <value>double vector</value>
                         <description>Width of each of the children. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing. The size of this vector must always match the size of Contents.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>( <string>'Name'</string>, <string>'uix.HBoxFlex example'</string> );
<!--&gt;&gt; -->b = <fcnref>uix.HBoxFlex</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'b'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'g'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'y'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'Widths'</string>, [-1 100 -2 -1], <string>'Spacing'</string>, 5 );</code>         
                     <result>
                         <center><img src="Images/HBoxFlex.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.HBox</name>
                     <desc>for creating a horizontal arrangement</desc>
                 </item>
                 <item>
                     <name>uix.VBoxFlex</name>
                     <desc>for creating a vertical arrangement with draggable dividers</desc>
                 </item>
             </seealso>
         </subsection>
         
         <subsection 
             name="uix.VBoxFlex" 
             description="Arrange elements vertically with draggable dividers"
             staticref="uix.VBoxFlex">
                 <keywords>Box</keywords>
                 <keywords>VBoxFlex</keywords>
                 <keywords>Vertical layout</keywords>
                 <keywords>Draggable dividers</keywords>
                 <keywords>Flexible layout</keywords>
             <img src="Images/bigicon_VBoxFlex.png" align="left"/>
             <br clear="all"/>
             <p>Arrange elements vertically with draggable dividers</p>
             <dl>
                 <dt><function>
                         <name>uix.VBoxFlex</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new vertical box layout with draggable dividers and with all properties set to defaults.
             The output is a new layout object that can be used as the parent for other user-interface components.</dd>
                 
                 <dt><function>
                         <name>uix.VBoxFlex</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                    <dd>also sets one or more property values from the list below.</dd>
             </dl>
                    
             <h3>uix.VBoxFlex properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>DividerMarkings</name>
                         <value>on | off</value>
                         <description>Show markings on the draggable dividers (default 'on').</description>
                     </property>
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>Heights</name>
                         <value>double vector</value>
                         <description>Height of each of the children. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing. The size of this vector must always match the size of Contents.</description>
                     </property>
                     <property>
                         <name>MinimumHeights</name>
                         <value>double vector</value>
                         <description>Minimum height in pixels of each of the children. The size of this vector must match the size of Contents.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout (default 5).</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>( <string>'Name'</string>, <string>'uix.VBoxFlex example'</string> );
<!--&gt;&gt; -->b = <fcnref>uix.VBoxFlex</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'b'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'g'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'Background'</string>, <string>'y'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'Heights'</string>, [-1 100 -2 -1], <string>'Spacing'</string>, 5 );</code>         
                     <result>
                         <center><img src="Images/VBoxFlex.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.VBox</name>
                     <desc>for creating a vertical arrangement</desc>
                 </item>
                 <item>
                     <name>uix.HBoxFlex</name>
                     <desc>for creating a horizontal arrangement with draggable dividers</desc>
                 </item>
             </seealso>
         </subsection>

         <subsection 
             name="uix.HButtonBox" 
             description="Arrange buttons horizontally in a single row"
             staticref="uix.HButtonBox">
                 <keywords>HButtonBox</keywords>
                 <keywords>Button box</keywords>
                 <keywords>Horizontal button layout</keywords>

             <img src="Images/bigicon_HButtonBox.png" align="left"/>
             <br clear="all"/>
             <p>Arrange buttons horizontally in a single row</p>
             <dl>
                 <dt><function>
                         <name>uix.HButtonBox</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>is a type of HBox specialised for
       arranging a row of buttons, check-boxes or similar graphical
       elements. All buttons are given equal size and by default are
       centered in the drawing area. The justification can be changed as
       required.</dd>
                 
                 <dt><function>
                         <name>uix.HButtonBox</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.HButtonBox properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>ButtonSize</name>
                         <value>[w h]</value>
                         <description>The size for the buttons (all are given equal size).</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>HorizontalAlignment</name>
                         <value>left | center | right</value>
                         <description>The horizontal position of the buttons.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>VerticalAlignment</name>
                         <value>top | middle | bottom</value>
                         <description>The vertical position of the buttons.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->b = <fcnref>uix.HButtonBox</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'String'</string>, 'One' );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'String'</string>, 'Two' );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'String'</string>, 'Three' );
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'ButtonSize'</string>, [130 35], <string>'Spacing'</string>, 5 );</code>
                     <result>
                         <center><img src="Images/HButtonBox.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.VButtonBox</name>
                     <desc>for creating a vertical arrangement of buttons</desc>
                 </item>
                 <item>
                     <name>uix.HBox</name>
                     <desc>for creating a general horizontal arrangement</desc>
                 </item>
             </seealso>
         </subsection>

         <subsection 
             name="uix.VButtonBox" 
             description="Arrange buttons vertically in a single column"
             staticref="uix.VButtonBox">
                 <keywords>VButtonBox</keywords>
                 <keywords>Button box</keywords>
                 <keywords>Vertical button layout</keywords>

             <img src="Images/bigicon_VButtonBox.png" align="left"/>
             <br clear="all"/>
             <p>Arrange buttons vertically in a single column</p>
             <dl>
                 <dt><function>
                         <name>uix.VButtonBox</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>is a type of VBox specialised for
       arranging a column of buttons, check-boxes or similar graphical
       elements. All buttons are given equal size and by default are
       centered in the drawing area. The justification can be changed as
       required.</dd>
                 
                 <dt><function>
                         <name>uix.VButtonBox</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.VButtonBox properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>ButtonSize</name>
                         <value>[w h]</value>
                         <description>The size for the buttons (all are given equal size).</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>HorizontalAlignment</name>
                         <value>left | center | right</value>
                         <description>The horizontal position of the buttons.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>VerticalAlignment</name>
                         <value>top | middle | bottom</value>
                         <description>The vertical position of the buttons.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->b = <fcnref>uix.VButtonBox</fcnref>( <string>'Parent'</string>, f );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'String'</string>, 'One' );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'String'</string>, 'Two' );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, b, <string>'String'</string>, 'Three' );
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( b, <string>'ButtonSize'</string>, [130 35], <string>'Spacing'</string>, 5 );</code>
                     <result>
                         <center><img src="Images/VButtonBox.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.HButtonBox</name>
                     <desc>for creating a horizontal arrangement of buttons</desc>
                 </item>
                 <item>
                     <name>uix.VBox</name>
                     <desc>for creating a general vertical arrangement</desc>
                 </item>
             </seealso>
         </subsection>

     </inlinesection>
    
         <!-- ****************************************************************** -->
    
     <inlinesection name="Grids">
         <a href="uix.Grid.html"><img src="Images/bigicon_Grid.png" border="1"/></a>
         <a href="uix.GridFlex.html"><img src="Images/bigicon_GridFlex.png" border="1"/></a>

        <subsection 
            name="uix.Grid" 
            description="Arrange elements in a two dimensional grid"
            staticref="uix.Grid">
                 <keywords>Grid</keywords>
             <img src="Images/bigicon_Grid.png" align="left"/>
             <br clear="all"/>
           <p>Arrange elements in a two dimensional grid</p>
                        <dl>
                 <dt><function>
                         <name>uix.Grid</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new new grid layout with all properties set to defaults. The number of rows and
                 columns to use is determined from the number of elements in the
                 Heights and Widths properties respectively. Child elements are
                 arranged down column one first, then column two etc. If there are insufficient
                 columns then a new one is added.
             The output is a new layout object that can be used as the parent for other user-interface components.</dd>
                 
                 <dt><function>
                         <name>uix.Grid</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.Grid properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>Heights</name>
                         <value>double vector</value>
                         <description>Height of each of the rows. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                     <property>
                         <name>Widths</name>
                         <value>double vector</value>
                         <description>Width of each of the columns. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->g = <fcnref>uix.Grid</fcnref>( <string>'Parent'</string>, f, <string>'Spacing'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'b'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'g'</string> )
<!--&gt;&gt; --><fcnref>uix.Empty</fcnref>( <string>'Parent'</string>, g )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'c'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'y'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( g, <string>'Widths'</string>, [-1 100 -2], <string>'Heights'</string>, [-1 100] );</code>         
                     <result>
                         <center><img src="Images/Grid.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.GridFlex</name>
                     <desc>for creating a grid arrangement with draggable dividers</desc>
                 </item>
             </seealso>

        </subsection>
        
        <subsection 
            name="uix.GridFlex" 
            description="Arrange elements in a two dimensional grid with draggable dividers"
            staticref="uix.GridFlex">
                 <keywords>GridFlex</keywords>
                 <keywords>Draggable dividers</keywords>
             <img src="Images/bigicon_GridFlex.png" align="left"/>
            <br clear="all"/>
            <p>Arrange elements in a two dimensional grid with draggable dividers</p>
                        <dl>
                 <dt><function>
                         <name>uix.GridFlex</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates a new new grid layout with draggable dividers between elements. The number of rows and
                 columns to use is determined from the number of elements in the
                 Heights and Widths properties respectively. Child elements are
                 arranged down column one first, then column two etc. If there are insufficient
                 columns then a new one is added.
             The output is a new layout object that can be used as the parent for other user-interface components.</dd>
                 
                 <dt><function>
                         <name>uix.GridFlex</name>
                         <outputarg>obj</outputarg>
                         <inputarg>prop</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
                    
             <h3>uix.GridFlex properties</h3>
                 <propertytable>
                     <property>
                         <name>BackgroundColor</name>
                         <value><matlabfcn>colorspec</matlabfcn></value>
                         <description>Color to use for exposed areas of the layout background. This can be an RGB triple (e.g. [0 0 1]) or a colour name (e.g. 'b').</description>
                     </property>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>Contents</name>
                         <value>empty GraphicsPlaceholder array | array of graphics objects</value>
                         <description>Children within this layout, regardless of HandleVisibility.  Note that this can only be set to permutations of itself.</description>
                     </property>
                     <property>
                         <name>DeleteFcn</name>
                         <value><matlabfcn>function_handle</matlabfcn></value>
                         <description>Function to call when the layout is being deleted.</description>
                     </property>
                     <!--
                     <property>
                         <name>DividerMarkings</name>
                         <value>on | off</value>
                         <description>Show markings on the draggable dividers (default 'on').</description>
                     </property>
                     <property>
                         <name>Enable</name>
                         <value>on | off</value>
                         <description>Is interaction with this layout enabled? Note that changing the enable property will cause all children contained to also be enabled/disabled, however since they can be individually re-enabled the state of this property does not reflect the state of the children. See the <ref link="EnableExample">enable example</ref> for more details.</description>
                     </property>
                     -->
                     <property>
                         <name>Heights</name>
                         <value>double vector</value>
                         <description>Height of each of the rows. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing.</description>
                     </property>
                     <property>
                         <name>Padding</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space around the outside of the layout.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the layout.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Spacing</name>
                         <value>positive integer</value>
                         <description>Number of pixels of extra space to leave between elements in the layout (default 5).</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with layout.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                     <property>
                         <name>Widths</name>
                         <value>double vector</value>
                         <description>Width of each of the columns. Positive entries indicate fixed sizes in pixels, negative values indicate relative weights for resizing.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->g = <fcnref>uix.GridFlex</fcnref>( <string>'Parent'</string>, f, <string>'Spacing'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'b'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'g'</string> )
<!--&gt;&gt; --><fcnref>uix.Empty</fcnref>( <string>'Parent'</string>, g )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'c'</string> )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, g, <string>'Background'</string>, <string>'y'</string> )
<!--&gt;&gt; --><matlabfcn>set</matlabfcn>( g, <string>'Widths'</string>, [-1 100 -2], <string>'Heights'</string>, [-1 -2] );</code>         
                     <result>
                         <center><img src="Images/GridFlex.png"/></center>
                     </result>
                 </example>
             </examples>
             
             <seealso>
                 <item>
                     <name>uix.Grid</name>
                     <desc>for creating a grid arrangement</desc>
                 </item>
             </seealso>

        </subsection>
        
    </inlinesection>
    <inlinesection name="Other functions">

        <subsection
            name="uix.Empty" 
            description="Create an empty space"
            staticref="uix.Empty">
                 <keywords>Empty</keywords>
            <p>Create an empty space</p>
                        <dl>
                 <dt><function>
                         <name>uix.Empty</name>
                         <outputarg>obj</outputarg>
                 </function></dt>
                 <dd>creates an empty space object that can be
    used in layouts to add gaps between other elements.</dd>
                 
                 <dt><function>
                         <name>uix.Empty</name>
                         <outputarg>obj</outputarg>
                         <inputarg>param</inputarg>
                         <inputarg>value</inputarg>
                         <inputarg>...</inputarg>
                 </function></dt>
                 <dd>also sets one or more property values.</dd>
                 
             </dl>
             
             <h3>uix.Empty properties</h3>
                 <p>The empty space is achieved using a container that monitors 
                 its parent's color and changes its own to match.</p>
                 <propertytable>
                     <property>
                         <name>BeingDeleted</name>
                         <value>on | off</value>
                         <description>Deletion status.</description>
                     </property>
                     <property>
                         <name>HandleVisibility</name>
                         <value>on | off</value>
                         <description>Visibility of the object.</description>
                     </property>
                     <property>
                         <name>Parent</name>
                         <value>empty GraphicsPlaceholder array | figure | container</value>
                         <description>Parent of the object.</description>
                     </property>
                     <property>
                         <name>Position</name>
                         <value>[x y w h]</value>
                         <description>Position (x,y) and size (w,h) within figure or container.</description>
                     </property>
                     <property>
                         <name>Tag</name>
                         <value>string</value>
                         <description>Tag to associate with object.</description>
                     </property>
                     <property>
                         <name>Type</name>
                         <value>string</value>
                         <description>Type of graphics object.</description>
                     </property>
                     <property>
                         <name>Units</name>
                         <value>inches | centimeters | normalized | points | pixels | characters</value>
                         <description>Position units.</description>
                     </property>
                     <property>
                         <name>Visible</name>
                         <value>on | off</value>
                         <description>Visibility.</description>
                     </property>
                 </propertytable>                 
             
             <examples>
                 <example>
                     <code><!--&gt;&gt; -->f = <matlabfcn>figure</matlabfcn>();
<!--&gt;&gt; -->box = <fcnref>uix.HBox</fcnref>( <string>'Parent'</string>, f, <string>'Spacing'</string>, 5 );
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, box, <string>'Background'</string>, <string>'r'</string> )
<!--&gt;&gt; --><fcnref>uix.Empty</fcnref>( <string>'Parent'</string>, box )
<!--&gt;&gt; --><matlabfcn>uicontrol</matlabfcn>( <string>'Parent'</string>, box, <string>'Background'</string>, <string>'g'</string> )</code>
                     <result><center><img src="Images/Empty.png"/></center></result>
                 </example>
             </examples>
             <seealso>
                 <item>
                     <name>uix.HBox</name>
                     <desc>for arranging widgets horizontally</desc>
                 </item>
             </seealso>
        </subsection>

        <subsection
            name="uix.tracking" 
            description="Track usage"
            staticref="uix.tracking">
                 <keywords>Tracking</keywords>
            <p>tracks anonymized usage data</p>
                        <dl>
                 <dt><function>
                         <name>uix.tracking</name>
                         <inputarg>p</inputarg>
                         <inputarg>v</inputarg>
                         <inputarg>id</inputarg>
                 </function></dt>
                 <dd>tracks usage to the property p for the version v and identifier id using Google Analytics.</dd>
                 <dt><function>
                         <name>uix.tracking</name>
                         <inputarg>state</inputarg>
                 </function></dt>
                 <dd>turns tracking on or off.</dd>
                 <dt><function>
                         <name>uix.tracking</name>
                         <inputarg>'query'</inputarg>
                         <outputarg>state</outputarg>
                 </function></dt>
                 <dd>queries whether tracking is on or off.</dd>
                 
             </dl>
             
             <examples>
             	   <example>
             	   	   <code><fcnref>uix.tracking</fcnref>(<string>'UA-45678-9'</string>,<string>'1.2.3'</string>,<string>'featurename'</string>)</code>
             	   </example>
                 <example>
                     <code><fcnref>uix.tracking</fcnref>(<string>'on'</string>)</code>
                 </example>
                 <example>
                     <code>state = <fcnref>uix.tracking</fcnref>(<string>'query'</string>)</code>
                     <result><code>state = <string>'on'</string></code></result>
                 </example>
             </examples>
        </subsection>

        <subsection
            name="layoutRoot" 
            description="Return the folder containing the GUI layout toolbox"
            staticref="layoutRoot">
                 <keywords>Installation folder</keywords>
                 <keywords>Folder</keywords>
                 <keywords>Root</keywords>
            <p>returns the folder containing the GUI layout toolbox</p>
                        <dl>
                 <dt><function>
                         <name>layoutRoot</name>
                         <outputarg>folder</outputarg>
                 </function></dt>
                 <dd>returns the full path to the folder containing the GUI Layout Toolbox.</dd>
                 
             </dl>
             
             <examples>
                 <example>
                     <code>folder = <fcnref>layoutRoot</fcnref>()</code>
                     <result><code>folder = <string>'C:\tools\glt2'</string></code></result>
                 </example>
             </examples>
        </subsection>

    </inlinesection>
        
</doc>
