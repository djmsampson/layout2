workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: always
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_TAG =~ /^v\d.*/
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always

stages:
  - test

variables:
  ARTIFACTS_DOWNLOAD_PATH: "C:/Users/$GITLAB_USER_LOGIN/Downloads"
  LOCATION: "UK"  

.gr-tests:
  stage: test
  tags:
   - long-jobs
  script:    
    - mw -using ${MATLAB_RELEASE}:perfect matlab -batch "addpath('tests'); results = runToolboxTests(); assert(~any([results.Failed]))"
  artifacts:
    when: always
    paths:
      - TestResults.xml
    reports:
      junit: TestResults.xml

latest-test:
  extends: .gr-tests
  parallel:
    matrix:
      - MATLAB_RELEASE: [R2024b]
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always

historic-tests:
  extends: .gr-tests
  parallel:
    matrix:
      - MATLAB_RELEASE: ["R2018b", "R2019b", "R2020b", "R2021b", "R2022b", "R2023b", "R2024a", "R2024b"]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: always
    - if: $CI_COMMIT_TAG =~ /^v\d.*/
      when: always

jsd-test:
  stage: test
  parallel:
    matrix:
      - MATLAB_RELEASE: ["R2024b"]
  tags:
    - long-jobs
  script:    
    - mw -using ${MATLAB_RELEASE}:perfect matlab -webui -batch "openProject('project.prj'); assertSuccess(runToolboxTests());"
  artifacts:
    when: always
    paths:
      - TestResults.xml
    reports:
      junit: TestResults.xml